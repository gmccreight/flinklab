version: "3.9"
   
services:
  jobmanager:
    # This is (roughly) the version of Flink supported by EMR
    image: flink:1.12.5-scala_2.11-java11
    command: "jobmanager.sh start-foreground"
    ports:
      - 8081:8081
    restart: always
    volumes:
      - ./conf:/opt/flink/conf
      - ./conf.local:/opt/flink/conf.local
      - /tmp/flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - /tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
      - ~/.aws:/opt/flink/.aws
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      ENABLE_BUILT_IN_PLUGINS: flink-s3-fs-hadoop-1.12.5.jar
      FLINK_CONF_DIR: ${FLINK_CONF_DIR:-/opt/flink/conf.local}
  taskmanager:
    image: flink:1.12.5-scala_2.11-java11
    depends_on:
      - jobmanager
    command: "taskmanager.sh start-foreground"
    restart: always
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - ./conf:/opt/flink/conf
      - ./conf.local:/opt/flink/conf.local
      - /tmp/flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - /tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
      - ~/.aws:/opt/flink/.aws
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      ENABLE_BUILT_IN_PLUGINS: flink-s3-fs-hadoop-1.12.5.jar
      FLINK_CONF_DIR: ${FLINK_CONF_DIR:-/opt/flink/conf.local}
  console:
    build:
      context: ./
      dockerfile: Dockerfile-console
    container_name: console
    command: flink -v # Service is meant for ssh, so we don't want it to actually boot
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      S3_BUCKET: ${S3_BUCKET:-data}
    volumes:
      - ./app:/app
      - ./data:/data
      - ./conf:/opt/flink/conf
      - ./conf.local:/opt/flink/conf.local
      - ./.m2:/root/.m2
      - ./.mc:/root/.mc
      - ./.sbt:/root/.sbt
      - ./.cache:/root/.cache

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    restart: always
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    restart: always
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ADVERTISED_HOST_NAME=kafka

  # Local S3
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./.minio-data:/data
